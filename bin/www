#!/usr/bin/env node

/**
 * Modulos dependencias
  */

var app = require('../app');
var debug = require('debug')('siglam:server');
var http = require('http');

/**
 * Obtener puerto del entorno, sino utilizar el puerto 3000
 */

var port  = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Creación del servidor HTTP
 */

var server = http.createServer(app);

/**
 * Escuchando en el puerto dado, en todas las interfaces de la red
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normaliza un puerto dentro de un número, cadena, o false
 */

function normalizePort(val) {
	var port = parseInt(val, 10);

	if (isNaN(port)) {
		//Tubería nombrada
		return val;
	}

	if (port >= 0) {
		//Número del puerto
		return port;
	}

	return false;

}

/**
 * Evento si se optiene un error al escuchar en el servidor
 */

function onError(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}

	var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

	// Manejador de esrrores especificos con mensajes amigables
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' Requiere privilegios relevantes');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' Actualmente está en uso');
			process.exit(1);
			break;
		default:
			throw error;
	}
}

/**
 * Evento si el puerto está escucnado correctamente
 */

function onListening() {
	var addr = server.address();
	var bind = typeof addr === 'string' ? 'Pipe ' + addr : 'Port ' + addr.port;
	debug('Escucando en ' + bind);
}